// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MemberAccessModifiers.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Reflection.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Reflection.Recipes
{
    using global::System;

    /// <summary>
    /// Scopes the search for members based on access modifiers.
    /// </summary>
    [Flags]
#if !OBeautifulCodeReflectionSolution
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Reflection.Recipes", "See package version number")]
    internal
#else
    public
#endif
    enum MemberAccessModifiers
    {
        /// <summary>
        /// None (default).
        /// </summary>
        None = 0,

        /// <summary>
        /// Include public members.
        /// </summary>
        Public = 1,

        /// <summary>
        /// Include internal members.
        /// </summary>
        Internal = 2,

        /// <summary>
        /// Include internal members.
        /// </summary>
        ProtectedInternal = 4,

        /// <summary>
        /// Include protected members.
        /// </summary>
        Protected = 8,

        /// <summary>
        /// Include private protected members.
        /// </summary>
        PrivateProtected = 16,

        /// <summary>
        /// Include private members.
        /// </summary>
        Private = 32,

        /// <summary>
        /// Include properties with a public getter.
        /// </summary>
        PublicGet = 64,

        /// <summary>
        /// Include properties with a internal getter.
        /// </summary>
        InternalGet = 128,

        /// <summary>
        /// Include properties with a protected internal getter.
        /// </summary>
        ProtectedInternalGet = 256,

        /// <summary>
        /// Include properties with a protected getter.
        /// </summary>
        ProtectedGet = 512,

        /// <summary>
        /// Include properties with a private protected getter.
        /// </summary>
        PrivateProtectedGet = 1024,

        /// <summary>
        /// Include properties with a private getter.
        /// </summary>
        PrivateGet = 2048,

        /// <summary>
        /// Include properties with a public setter.
        /// </summary>
        PublicSet = 4096,

        /// <summary>
        /// Include properties with a internal setter.
        /// </summary>
        InternalSet = 8192,

        /// <summary>
        /// Include properties with a protected internal setter.
        /// </summary>
        ProtectedInternalSet = 16384,

        /// <summary>
        /// Include properties with a protected setter.
        /// </summary>
        ProtectedSet = 32768,

        /// <summary>
        /// Include properties with a private protected setter.
        /// </summary>
        PrivateProtectedSet = 65536,

        /// <summary>
        /// Include properties with a private setter.
        /// </summary>
        PrivateSet = 131072,

        /// <summary>
        /// Include members having any supported access modifier.
        /// </summary>
        All = Public | Internal | ProtectedInternal | Protected | PrivateProtected | Private | PublicGet | InternalGet | ProtectedInternalGet | ProtectedGet | PrivateProtectedGet | PrivateGet | PublicSet | InternalSet | ProtectedInternalSet | ProtectedSet | PrivateProtectedSet | PrivateSet,
    }
}
