// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.199.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.SqlServer.Domain
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class SqlServerJobInformation : IModel<SqlServerJobInformation>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="SqlServerJobInformation"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(SqlServerJobInformation left, SqlServerJobInformation right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="SqlServerJobInformation"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(SqlServerJobInformation left, SqlServerJobInformation right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(SqlServerJobInformation other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.Id.IsEqualTo(other.Id, StringComparer.Ordinal)
                      && this.JobName.IsEqualTo(other.JobName, StringComparer.Ordinal)
                      && this.LatestStepName.IsEqualTo(other.LatestStepName, StringComparer.Ordinal)
                      && this.JobStatus.IsEqualTo(other.JobStatus)
                      && this.LatestStepRunTime.IsEqualTo(other.LatestStepRunTime)
                      && this.LatestStepRunDuration.IsEqualTo(other.LatestStepRunDuration);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as SqlServerJobInformation);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.Id)
            .Hash(this.JobName)
            .Hash(this.LatestStepName)
            .Hash(this.JobStatus)
            .Hash(this.LatestStepRunTime)
            .Hash(this.LatestStepRunDuration)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public SqlServerJobInformation DeepClone()
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 this.JobName?.DeepClone(),
                                 this.LatestStepName?.DeepClone(),
                                 this.JobStatus.DeepClone(),
                                 this.LatestStepRunTime?.DeepClone(),
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Id" />.
        /// </summary>
        /// <param name="id">The new <see cref="Id" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="id" /> for <see cref="Id" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithId(string id)
        {
            var result = new SqlServerJobInformation(
                                 id,
                                 this.JobName?.DeepClone(),
                                 this.LatestStepName?.DeepClone(),
                                 this.JobStatus.DeepClone(),
                                 this.LatestStepRunTime?.DeepClone(),
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="JobName" />.
        /// </summary>
        /// <param name="jobName">The new <see cref="JobName" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="jobName" /> for <see cref="JobName" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithJobName(string jobName)
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 jobName,
                                 this.LatestStepName?.DeepClone(),
                                 this.JobStatus.DeepClone(),
                                 this.LatestStepRunTime?.DeepClone(),
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LatestStepName" />.
        /// </summary>
        /// <param name="latestStepName">The new <see cref="LatestStepName" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="latestStepName" /> for <see cref="LatestStepName" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithLatestStepName(string latestStepName)
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 this.JobName?.DeepClone(),
                                 latestStepName,
                                 this.JobStatus.DeepClone(),
                                 this.LatestStepRunTime?.DeepClone(),
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="JobStatus" />.
        /// </summary>
        /// <param name="jobStatus">The new <see cref="JobStatus" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="jobStatus" /> for <see cref="JobStatus" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithJobStatus(JobStatus jobStatus)
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 this.JobName?.DeepClone(),
                                 this.LatestStepName?.DeepClone(),
                                 jobStatus,
                                 this.LatestStepRunTime?.DeepClone(),
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LatestStepRunTime" />.
        /// </summary>
        /// <param name="latestStepRunTime">The new <see cref="LatestStepRunTime" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="latestStepRunTime" /> for <see cref="LatestStepRunTime" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithLatestStepRunTime(DateTime? latestStepRunTime)
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 this.JobName?.DeepClone(),
                                 this.LatestStepName?.DeepClone(),
                                 this.JobStatus.DeepClone(),
                                 latestStepRunTime,
                                 this.LatestStepRunDuration?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LatestStepRunDuration" />.
        /// </summary>
        /// <param name="latestStepRunDuration">The new <see cref="LatestStepRunDuration" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerJobInformation" /> using the specified <paramref name="latestStepRunDuration" /> for <see cref="LatestStepRunDuration" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerJobInformation DeepCloneWithLatestStepRunDuration(TimeSpan? latestStepRunDuration)
        {
            var result = new SqlServerJobInformation(
                                 this.Id?.DeepClone(),
                                 this.JobName?.DeepClone(),
                                 this.LatestStepName?.DeepClone(),
                                 this.JobStatus.DeepClone(),
                                 this.LatestStepRunTime?.DeepClone(),
                                 latestStepRunDuration);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"Naos.SqlServer.Domain.SqlServerJobInformation: Id = {this.Id?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, JobName = {this.JobName?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LatestStepName = {this.LatestStepName?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, JobStatus = {this.JobStatus.ToString() ?? "<null>"}, LatestStepRunTime = {this.LatestStepRunTime?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LatestStepRunDuration = {this.LatestStepRunDuration?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}