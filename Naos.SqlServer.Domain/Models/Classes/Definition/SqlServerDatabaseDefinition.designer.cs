// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.177.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.SqlServer.Domain
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class SqlServerDatabaseDefinition : IModel<SqlServerDatabaseDefinition>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="SqlServerDatabaseDefinition"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(SqlServerDatabaseDefinition left, SqlServerDatabaseDefinition right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="SqlServerDatabaseDefinition"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(SqlServerDatabaseDefinition left, SqlServerDatabaseDefinition right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(SqlServerDatabaseDefinition other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.DatabaseName.IsEqualTo(other.DatabaseName, StringComparer.Ordinal)
                      && this.DatabaseType.IsEqualTo(other.DatabaseType)
                      && this.RecoveryMode.IsEqualTo(other.RecoveryMode)
                      && this.DataFileLogicalName.IsEqualTo(other.DataFileLogicalName, StringComparer.Ordinal)
                      && this.DataFilePath.IsEqualTo(other.DataFilePath, StringComparer.Ordinal)
                      && this.LogFilePath.IsEqualTo(other.LogFilePath, StringComparer.Ordinal)
                      && this.DataFileCurrentSizeInKb.IsEqualTo(other.DataFileCurrentSizeInKb)
                      && this.DataFileMaxSizeInKb.IsEqualTo(other.DataFileMaxSizeInKb)
                      && this.DataFileGrowthSizeInKb.IsEqualTo(other.DataFileGrowthSizeInKb)
                      && this.LogFileLogicalName.IsEqualTo(other.LogFileLogicalName, StringComparer.Ordinal)
                      && this.LogFileCurrentSizeInKb.IsEqualTo(other.LogFileCurrentSizeInKb)
                      && this.LogFileMaxSizeInKb.IsEqualTo(other.LogFileMaxSizeInKb)
                      && this.LogFileGrowthSizeInKb.IsEqualTo(other.LogFileGrowthSizeInKb);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as SqlServerDatabaseDefinition);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.DatabaseName)
            .Hash(this.DatabaseType)
            .Hash(this.RecoveryMode)
            .Hash(this.DataFileLogicalName)
            .Hash(this.DataFilePath)
            .Hash(this.LogFilePath)
            .Hash(this.DataFileCurrentSizeInKb)
            .Hash(this.DataFileMaxSizeInKb)
            .Hash(this.DataFileGrowthSizeInKb)
            .Hash(this.LogFileLogicalName)
            .Hash(this.LogFileCurrentSizeInKb)
            .Hash(this.LogFileMaxSizeInKb)
            .Hash(this.LogFileGrowthSizeInKb)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public SqlServerDatabaseDefinition DeepClone()
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DatabaseName" />.
        /// </summary>
        /// <param name="databaseName">The new <see cref="DatabaseName" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="databaseName" /> for <see cref="DatabaseName" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDatabaseName(string databaseName)
        {
            var result = new SqlServerDatabaseDefinition(
                                 databaseName,
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DatabaseType" />.
        /// </summary>
        /// <param name="databaseType">The new <see cref="DatabaseType" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="databaseType" /> for <see cref="DatabaseType" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDatabaseType(DatabaseType databaseType)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 databaseType,
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="RecoveryMode" />.
        /// </summary>
        /// <param name="recoveryMode">The new <see cref="RecoveryMode" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="recoveryMode" /> for <see cref="RecoveryMode" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithRecoveryMode(RecoveryMode recoveryMode)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 recoveryMode,
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DataFileLogicalName" />.
        /// </summary>
        /// <param name="dataFileLogicalName">The new <see cref="DataFileLogicalName" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="dataFileLogicalName" /> for <see cref="DataFileLogicalName" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDataFileLogicalName(string dataFileLogicalName)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 dataFileLogicalName,
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DataFilePath" />.
        /// </summary>
        /// <param name="dataFilePath">The new <see cref="DataFilePath" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="dataFilePath" /> for <see cref="DataFilePath" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDataFilePath(string dataFilePath)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 dataFilePath,
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LogFilePath" />.
        /// </summary>
        /// <param name="logFilePath">The new <see cref="LogFilePath" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="logFilePath" /> for <see cref="LogFilePath" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithLogFilePath(string logFilePath)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 logFilePath,
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DataFileCurrentSizeInKb" />.
        /// </summary>
        /// <param name="dataFileCurrentSizeInKb">The new <see cref="DataFileCurrentSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="dataFileCurrentSizeInKb" /> for <see cref="DataFileCurrentSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDataFileCurrentSizeInKb(long dataFileCurrentSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 dataFileCurrentSizeInKb,
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DataFileMaxSizeInKb" />.
        /// </summary>
        /// <param name="dataFileMaxSizeInKb">The new <see cref="DataFileMaxSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="dataFileMaxSizeInKb" /> for <see cref="DataFileMaxSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDataFileMaxSizeInKb(long dataFileMaxSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 dataFileMaxSizeInKb,
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="DataFileGrowthSizeInKb" />.
        /// </summary>
        /// <param name="dataFileGrowthSizeInKb">The new <see cref="DataFileGrowthSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="dataFileGrowthSizeInKb" /> for <see cref="DataFileGrowthSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithDataFileGrowthSizeInKb(long dataFileGrowthSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 dataFileGrowthSizeInKb,
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LogFileLogicalName" />.
        /// </summary>
        /// <param name="logFileLogicalName">The new <see cref="LogFileLogicalName" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="logFileLogicalName" /> for <see cref="LogFileLogicalName" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithLogFileLogicalName(string logFileLogicalName)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 logFileLogicalName,
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LogFileCurrentSizeInKb" />.
        /// </summary>
        /// <param name="logFileCurrentSizeInKb">The new <see cref="LogFileCurrentSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="logFileCurrentSizeInKb" /> for <see cref="LogFileCurrentSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithLogFileCurrentSizeInKb(long logFileCurrentSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 logFileCurrentSizeInKb,
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LogFileMaxSizeInKb" />.
        /// </summary>
        /// <param name="logFileMaxSizeInKb">The new <see cref="LogFileMaxSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="logFileMaxSizeInKb" /> for <see cref="LogFileMaxSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithLogFileMaxSizeInKb(long logFileMaxSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 logFileMaxSizeInKb,
                                 this.LogFileGrowthSizeInKb.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LogFileGrowthSizeInKb" />.
        /// </summary>
        /// <param name="logFileGrowthSizeInKb">The new <see cref="LogFileGrowthSizeInKb" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="SqlServerDatabaseDefinition" /> using the specified <paramref name="logFileGrowthSizeInKb" /> for <see cref="LogFileGrowthSizeInKb" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public SqlServerDatabaseDefinition DeepCloneWithLogFileGrowthSizeInKb(long logFileGrowthSizeInKb)
        {
            var result = new SqlServerDatabaseDefinition(
                                 this.DatabaseName?.DeepClone(),
                                 this.DatabaseType.DeepClone(),
                                 this.RecoveryMode.DeepClone(),
                                 this.DataFileLogicalName?.DeepClone(),
                                 this.DataFilePath?.DeepClone(),
                                 this.DataFileCurrentSizeInKb.DeepClone(),
                                 this.DataFileMaxSizeInKb.DeepClone(),
                                 this.DataFileGrowthSizeInKb.DeepClone(),
                                 this.LogFileLogicalName?.DeepClone(),
                                 this.LogFilePath?.DeepClone(),
                                 this.LogFileCurrentSizeInKb.DeepClone(),
                                 this.LogFileMaxSizeInKb.DeepClone(),
                                 logFileGrowthSizeInKb);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"Naos.SqlServer.Domain.SqlServerDatabaseDefinition: DatabaseName = {this.DatabaseName?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, DatabaseType = {this.DatabaseType.ToString() ?? "<null>"}, RecoveryMode = {this.RecoveryMode.ToString() ?? "<null>"}, DataFileLogicalName = {this.DataFileLogicalName?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, DataFilePath = {this.DataFilePath?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LogFilePath = {this.LogFilePath?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, DataFileCurrentSizeInKb = {this.DataFileCurrentSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, DataFileMaxSizeInKb = {this.DataFileMaxSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, DataFileGrowthSizeInKb = {this.DataFileGrowthSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LogFileLogicalName = {this.LogFileLogicalName?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LogFileCurrentSizeInKb = {this.LogFileCurrentSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LogFileMaxSizeInKb = {this.LogFileMaxSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, LogFileGrowthSizeInKb = {this.LogFileGrowthSizeInKb.ToString(CultureInfo.InvariantCulture) ?? "<null>"}.");

            return result;
        }
    }
}