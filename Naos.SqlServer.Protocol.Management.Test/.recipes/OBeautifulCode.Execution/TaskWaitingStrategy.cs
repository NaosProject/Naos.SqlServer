// --------------------------------------------------------------------------------------------------------------------
// <copyright file="TaskWaitingStrategy.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Execution.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Execution.Recipes
{
    using global::System;
    using global::System.Threading;
    using global::System.Threading.Tasks;

    /// <summary>
    /// Strategy on how to wait until a <see cref="Task" /> is complete.
    /// </summary>
#if !OBeautifulCodeExecutionSolution
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Execution.Recipes", "See package version number")]
    internal
#else
    public
#endif
    enum TaskWaitingStrategy
    {
        /// <summary>
        /// <see cref="Thread.Sleep(TimeSpan)" /> while waiting.
        /// </summary>
        Sleep,

        /// <summary>
        /// <see cref="Thread.Yield" /> followed by a <see cref="Thread.Sleep(TimeSpan)" /> while waiting.
        /// </summary>
        YieldAndSleep,
    }
}